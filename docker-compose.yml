version: '3.8'

services:
  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    
    environment:
      POSTGRES_DB: mon_application_db
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password

    secrets:
      - db_password

    volumes:
      - postgres_data:/var/lib/postgresql/data
      
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d mon_application_db"]
      interval: 10s
      timeout: 5s
      retries: 5

    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.50'
    #       memory: 512M 

    networks:
      - database

  backend: 
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_DB: mon_application_db
      POSTGRES_USER: dev_user
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    networks:
      - database
      - backend
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

volumes:
  postgres_data:
    driver: local

secrets:
  db_password:
    file: ./secrets/db_password.txt
    
networks:
  database:
    driver: bridge
    internal: true
  backend:
    driver: bridge
    internal: false
